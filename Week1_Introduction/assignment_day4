# ____________________________________________H. LOOPING AND LISTS____________________________________________
#                               (7) 99 bottles of beer on the wall lyrics
#   Write a program that prints out the lyrics to that beloved classic, “99 Bottles of Beer on the Wall.”
x = 100

while x != 2 :
    x = x - 1
    y = x - 1
    print(x, 'bottles of beer on the wall,', x, 'bottles of beer. Take one down and pass it around, ', y ,'bottles of beer on the wall.')
print('1 bottle of beer on the wall, 1 bottle of beer. Take one down and pass it around, 0 bottles of beer on the wall.')

#                               (8) Deaf Grandma
#   Whatever you say to Grandma (whatever you type in), she should respond with this: HUH?! SPEAK UP, GIRL!
#   unless you shout it (type in all capitals). If you shout, she can hear you (or at least she thinks so)
#   and yells back: NO, NOT SINCE 1938! To make your program really believable, have Grandma shout a different
#   year each time, maybe any year at random between 1930 and 1950. You can’t stop talking to Grandma until you shout BYE.

import random
print('My dear grand child, what\'s your question?')
str = input()
while str.isupper() == False:
    print('WHAT?! SPEAK UP, GIRL!')
    str = input()
    if str.isupper() == True:
        year = random.randint(1900,2000)
        print('NO, NOT SINCE', year)
        str = input()
    if str == 'BYE' :
        print('BYE, GIRL')

#                               (9) Leap Years
#   Write a program that asks for a starting year and an ending year and then puts all the leap years between them
#   (and including them, if they are also leap years). Leap years are years divisible by 4 (like 1984 and 2004). However,
#   years divisible by 100 are not leap years (such as 1800 and 1900) unless they are also divisible by 400 (such as 1600 and
#   2000, which were in fact leap years). What a mess!

leap_years = list(range(1599,2001))
result = list(filter(lambda x: (x % 4 == 0 and x % 100 != 0 or x % 400 == 0), leap_years))
print(result)

#                               (10) Building and Sorting an Array
#   Write the program that asks us to type as many words as we want (one word per line, continuing until we just press Enter on
#   an empty line) and then repeats the words back to us in alphabetical order. Make sure to test your program thoroughly; for
#   example, does hitting Enter on an empty line always exit your program? Even on the first line? And the second?
print('Make to-do list')
todo = [] 
i = 0
while True : 
    i += 1
    task = input()    
    if task == '' :
        break
    todo.append(task)
    todo.sort()
print('This is your to-do list:') 
print(*todo, sep = "\n")
if len(todo) == 0:
    print('Your list is empty')


#                               (11) Table of Contents Part 2
#    Write a table of contents program here. Start the program with a list holding all of the information for your table of
#    contents (chapter names, page numbers, and so on). Then print out the information from the list in a beautifully formatted
#    table of contents. Use string formatting such as left align, right align, center.
print('Enter chapter names.')
table = [] 
x = 0
while True:
    x += 1
    chapter = input('Chapter %d:' %x) 
    if chapter == '' :
        break
    table.append(chapter)
print('These are your chapters: ',table) 

print('Enter page numbers.') 
reference = [] 
y = 0
while True:
    y += 1
    number = input('Chapter %d:' %y)
    if number == '' :
        break
    reference.append(number)
print('These are your references:',reference)    

list_len = len(table)
title = "Table of Contents"
print(title.center(40, ' '))
g = 0
for z in range(list_len) :
    g += 1
    ch = "Chapter %d: " %g + table[z] 
    pg = "page" + reference[z] 
    len_ch = 20-len(table[z])
    print(ch.ljust(0, ' '), pg.rjust(len_ch, ' '))

# ________________________________________I. WRITING YOUR OWN FUNCTIONS________________________________________


